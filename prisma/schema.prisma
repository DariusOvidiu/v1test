// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String    @id @default(cuid())
  username        String    @unique
  email           String    @unique
  password        String
  country         String
  phone           String
  interests       String    // Stored as JSON string
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  roles           Role[]    @relation("UserRoles")
  isEmailVerified Boolean   @default(false)
  emailVerificationToken String?
  resetPasswordToken String?
  resetPasswordExpires DateTime?
  notifications   Notification[]
  resetToken      String?   
  resetTokenExpiry DateTime?
}

model Role {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  users       User[]    @relation("UserRoles")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model NewsletterSubscriber {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  acceptedTerms Boolean  @default(false)
  subscribedAt  DateTime @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Notification {
  id          String    @id @default(cuid())
  userId      String
  type        String    // 'info', 'success', 'warning', 'error'
  title       String
  message     String
  isRead      Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}
